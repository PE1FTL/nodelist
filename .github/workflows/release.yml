name: Create Release and Increment Build Number

on:
  push:
    branches:
      - main  # Oder 'master', je nachdem, wie Ihr Hauptbranch heißt

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # <-- Diese Zeile ist entscheidend!
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Notwendig, um alle Tags zu holen

      - name: Get latest tag and determine new version
        id: tag_version
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          IFS='.' read -r -a VERSION_PARTS <<< "$LATEST_TAG"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          BUILD=${VERSION_PARTS[2]}
          NEW_BUILD=$((BUILD + 1))
          NEW_TAG="$MAJOR.$MINOR.$NEW_BUILD"
          echo "Neuer Tag wird sein: $NEW_TAG"
          echo "new_tag=$NEW_TAG" >> $GITHUB_ENV

      - name: Get Changelog from last commit
        id: changelog
        run: |
          CHANGELOG=$(git log -1 --pretty=format:'%s')
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          echo "changelog_text=${CHANGELOG}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.new_tag }}
          release_name: Release ${{ env.new_tag }}
          body: |
            Automatisch erstelltes Release.
            Änderung: ${{ env.changelog_text }}
          draft: false
          prerelease: false

      - name: Build the plugin zip file
        run: |
          mkdir -p nodelist-release/nodelist
          cp -r *.php assets nodelist-release/nodelist/
          cd nodelist-release
          zip -r ../${{ github.event.repository.name }}.zip .
          cd ..

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}.zip
          asset_content_type: application/zip
